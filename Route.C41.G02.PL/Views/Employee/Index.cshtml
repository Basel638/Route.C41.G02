@model IEnumerable<Employee>
@{
	ViewData["Title"] = "Index";

	string ViewDataMessage = ViewData["Message"] as string; //Enforce Type Safety -> Requires Type Conversion [Strongly Typed]

	string ViewBagMessage = ViewBag.Message;
}


@if (!string.IsNullOrEmpty(TempData["Message"] as string))
{
	<div>
		class="alert alert-primary">
		@TempData["Message"]

	</div>
}
@* <div>class ="alert alert-warning"

	@ViewData["Message"]
</div> 
 *@

<div>
	class ="alert alert-warning"

	@ViewBag.Message
</div>

<h1>All Employees</h1>
<br />
<br />


<a asp-controller="Employee" asp-action="Create" class="btn btn-primary">Cerate new Employee</a>



<br />

@if (Model.Count() > 0)
{
	<table>
		class= "table table-striped table-hover"


		<thead>
			<tr>

				<th>@Html.DisplayNameFor(D => D.Name)</th>
				<th>@Html.DisplayNameFor(D => D.Salary)</th>
				<th>@Html.DisplayNameFor(D => D.IsActive)</th>
				<th>@Html.DisplayNameFor(D => D.Department)</th>
				@* <th>@Html.DisplayNameFor(D => D.PhoneNumber)</th> *@
				<th>@Html.DisplayNameFor(D => D.Gender)</th>
				@* <th>@Html.DisplayNameFor(D => D.HiringDate)</th> *@
				<th>@Html.DisplayNameFor(D => D.Age)</th>
				<th>@Html.DisplayNameFor(D => D.Email)</th>


				<th>Details</th>
				<th>Update</th>
				<th>Delete</th>

			</tr>
		</thead>
		<tbody>
			@foreach (var Employee in Model)
			{
				<tr>
					<td>@Employee.Name</td>
					<td>@Employee.Age</td>
					<td>@Employee.Department?.Name</td>
					<td>@Html.DisplayFor(M => Employee.Salary)</td>
					<td>@Html.DisplayFor(M => Employee.IsActive)</td>
					<td>@Employee.Gender</td>
					<td>@Html.DisplayFor(M => Employee.Email)</td>

					<partial name="_ButtonsPartial" model="@Employee.Id" />
				</tr>
			}
		</tbody>
	</table>

}

else
{
	<div>
		class= "mt-4 alert alert-warning"

		<h3>There is No Employees :(</h3>

	</div>


}



